{"version":3,"sources":["config/firebase.js","components/FormularioMaterias.js","components/FormularioPregunta.js","components/FormularioArea.js","components/FormularioCarrera.js","App.js","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","FormularioMateria","useState","materias","setMaterias","materia","setMateria","disableButton","setDisableButton","getMaterias","a","docs","getDocs","query","collection","forEach","doc","push","data","console","log","registrarMateria","undefined","idMateria","replace","docData","id","nombre","cantidadPreguntas","addDoc","useEffect","onSubmit","e","preventDefault","className","htmlFor","type","value","onChange","target","disabled","map","item","Formulario","pregunta","setPregunta","setFormula","srtrPregunta","setSrtrPregunta","srtrOpcion1","setSrtrOpcion1","srtrOpcion2","setSrtrOpcion2","srtrOpcion3","setSrtrOpcion3","srtrOpcion4","setSrtrOpcion4","actulizaropcion","useRef","opcion","registrarPregunta","cantidad","where","opcionCorrecta","opciones","updateDoc","alert","submit","aria-label","placeholder","style","height","data-bs-toggle","data-bs-target","tabindex","aria-labelledby","aria-hidden","data-bs-dismiss","class","role","onClick","FormularioArea","area","setArea","areas","datosCarrera","FormularioCarrera","setAreas","areaSeleccionada","setAreaSeleccionada","materiasSeleccionadas","setMateriasSeleccionadas","nombreCarrera","setNombreCarrera","getAreas","idArea","length","size","adD","getDoc","exists","carreras","Ca","idCarrera","index","includes","setMateriass","nueva","filter","i","quitarMateria","App","carrera","buttons","setButtons","changeView","view","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ad80f94.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\n//import { getAnalytics } from \"firebase/analytics\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDIP_rxGJz-bWbM7nYtOau6n_SS5HZBY2k\",\r\n  authDomain: \"preguntados-40873.firebaseapp.com\",\r\n  projectId: \"preguntados-40873\",\r\n  storageBucket: \"preguntados-40873.appspot.com\",\r\n  messagingSenderId: \"699473849342\",\r\n  appId: \"1:699473849342:web:f5fdb910e6b4457c67eeaf\",\r\n  measurementId: \"G-ZS8KWC7DG0\"\r\n};\r\n\r\n// Initialize Firebase\r\nexport const app = initializeApp(firebaseConfig);\r\n//const analytics = getAnalytics(app);\r\nexport const db = getFirestore(app);","import { Fragment, useEffect, useState } from \"react\";\r\nimport { doc, getDoc,updateDoc , setDoc,addDoc,collection } from \"firebase/firestore\";\r\nimport { query, where, getDocs } from \"firebase/firestore\";\r\nimport { db } from \"../config/firebase\";\r\n\r\nexport default function FormularioMateria(){\r\n    const [materias, setMaterias] = useState();\r\n    const [materia, setMateria] = useState(\"\");\r\n    const [disableButton, setDisableButton] = useState(false);\r\n\r\n    const getMaterias = async () =>{\r\n        try {\r\n            let docs=[];\r\n            const materias = await getDocs(query(collection(db,'Materias')));\r\n            materias.forEach((doc) => {\r\n                docs.push(doc.data());\r\n            });\r\n            setMaterias(docs);\r\n        } catch (error) {\r\n            console.log('Error al obtener materias', error);\r\n        }\r\n    }\r\n    const registrarMateria = async () =>{\r\n        try {\r\n            setDisableButton(true);\r\n            console.log(materia);\r\n            if(materia === '' || materia === undefined){\r\n                console.log(\"debe escribir El nombre de la materia\");\r\n                return\r\n            }\r\n            let idMateria = materia;\r\n            idMateria = idMateria.replace(/\\s/g, '');\r\n            const docData = {\r\n                id:idMateria,\r\n                nombre:materia,\r\n                cantidadPreguntas:0,\r\n            };\r\n            setMateria('');\r\n            await addDoc(collection(db, 'Materias'), docData);\r\n            console.log('registro exitoso');\r\n            setDisableButton(false);\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const submit = (e) =>{\r\n        e.preventDefault();\r\n        registrarMateria();\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getMaterias();\r\n    },[]);\r\n    return(\r\n        <Fragment>\r\n            <h1>agregar Materia</h1>\r\n            <form onSubmit={submit} >\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"nombre\" className=\"form-label\">Nombre Materia</label>\r\n                    <input type=\"text\" value={materia} onChange={(e)=>setMateria(e.target.value)} className=\"form-control\" id=\"nombre\"/>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\" disabled={disableButton}>Submit</button>\r\n            </form>\r\n            {materias && materias.map((item) => {\r\n                return <p key={item.id}>{item.nombre}</p>\r\n            })}\r\n        </Fragment>\r\n    );\r\n}\r\n","import { Fragment, useState, useRef, useEffect} from \"react\";\r\nimport MathView from 'react-math-view';\r\nimport { doc, getDoc,updateDoc , setDoc,addDoc,collection } from \"firebase/firestore\";\r\nimport { query, where, getDocs } from \"firebase/firestore\";\r\nimport { db } from \"../config/firebase\";\r\n\r\nexport default function Formulario(){\r\n\r\n    const [disableButton, setDisableButton] = useState(false);\r\n    const [pregunta, setPregunta] = useState(\"\");\r\n    const [formula, setFormula] = useState('');\r\n\r\n    const [materias, setMaterias] = useState([]);\r\n\r\n    const [fPregunta, setFPregunta] = useState([]);\r\n    const [srtrPregunta, setSrtrPregunta] = useState(\"\");\r\n\r\n    const [fopcion1, setFopcion1] = useState([]);\r\n    const [srtrOpcion1, setSrtrOpcion1] = useState(\"\");\r\n\r\n    const [fopcion2, setFopcion2] = useState([]);\r\n    const [srtrOpcion2, setSrtrOpcion2] = useState(\"\");\r\n\r\n    const [fopcion3, setFopcion3] = useState([]);\r\n    const [srtrOpcion3, setSrtrOpcion3] = useState(\"\");\r\n\r\n    const [fopcion4, setFopcion4] = useState([]); //opcion correcta\r\n    const [srtrOpcion4, setSrtrOpcion4] = useState(\"\");\r\n\r\n\r\n    const [respuesta, setRespuesta] = useState('');\r\n    const [materia, setMateria] = useState('');\r\n    const [texto, setTexto] = useState('hola como estas mathViewMTHx=\\\\frac{-b\\\\pm\\\\sqrt{b^2-\\\\frac{4/a}{2321}}}{2ab}23mathView bien');\r\n\r\n    const [textoProcesado, setTextoProcesado] = useState([]);\r\n    \r\n    \r\n\r\n    \r\n    const ref = useRef(null);\r\n    \r\n    const actulizarPregunta = (e) => {\r\n        setSrtrPregunta(e.target.value);\r\n        setPregunta(e.target.value);\r\n        setFormula(e.target.value);\r\n    }\r\n    const procesarTexto =()=>{\r\n        let textP=[];\r\n        let contador=0;\r\n        //if exist 'MTH' en texto\r\n        if(texto.includes('MTH')){\r\n            console.log('existe MTHs');\r\n        }else {\r\n            console.log('no existe MTH');\r\n        }\r\n        texto.split('mathView').forEach(element => {\r\n            textP.push(element);\r\n        });\r\n        console.log(textP);\r\n        setTextoProcesado(textP);\r\n    }\r\n\r\n    //mostrar el texto procesado\r\n    const mostrarTextoProcesado = () =>{\r\n        //if exist 'MTH' en texto\r\n        return (<p>{ textoProcesado.map((item) => {\r\n            if(item.includes('MTH')){\r\n                console.log('existe MTHssss',item);\r\n                //quitar MTH\r\n                let it=item.replace('MTH','');\r\n                return <MathView value={it} />\r\n            }else {\r\n                console.log('no existe ssssMH',item);\r\n                return item\r\n            }\r\n        })}\r\n        </p>)\r\n\r\n    }\r\n    \r\n    const actulizaropcion = (e,opcion) => {\r\n        if(opcion!=='cls'){\r\n            switch(opcion){\r\n                case 'op1':setSrtrOpcion1(e.target.value); break;\r\n                case 'op2':setSrtrOpcion2(e.target.value); break;\r\n                case 'op3':setSrtrOpcion3(e.target.value); break;\r\n                case 'opC':setSrtrOpcion4(e.target.value); break;\r\n                default: console.log('no existe opcion');\r\n            }\r\n        }else{\r\n            setSrtrOpcion1(\"\"); \r\n            setSrtrOpcion2(\"\"); \r\n            setSrtrOpcion3(\"\"); \r\n            setSrtrOpcion4(\"\"); \r\n            setSrtrPregunta(\"\");\r\n\r\n        }\r\n        //setRespuesta(e.target.value);\r\n    }\r\n\r\n    const submit2 = () =>{\r\n        //console.log(e);\r\n        setFormula(ref.current?.getValue())\r\n       // console.log('onModeChange', sender, mode)\r\n    }\r\n\r\n    const registrarPregunta = async () =>{\r\n        try {\r\n            setDisableButton(true);\r\n            let cantidad=0;\r\n            let idMateria='';\r\n\r\n            \r\n            const materia_ = await getDocs(query(collection(db,'Materias'), where('id', '==',materia)));\r\n            materia_.forEach((doc) => {\r\n                cantidad=doc.data().cantidadPreguntas;\r\n                idMateria=doc.id;\r\n            });\r\n            \r\n            const docData = {\r\n                id:cantidad+1,\r\n                pregunta:srtrPregunta,\r\n                opcionCorrecta:srtrOpcion4,\r\n                opciones: [srtrOpcion1, srtrOpcion2, srtrOpcion3, srtrOpcion4],\r\n                materia: materia\r\n            };\r\n            await updateDoc(doc(db, \"Materias\",idMateria), {cantidadPreguntas:cantidad+1});\r\n            console.log('data updated');\r\n\r\n            await addDoc(collection(db, materia), docData);\r\n            \r\n            actulizaropcion('cls','cls');\r\n            setDisableButton(false);\r\n            alert('Se guardaron los datos correctamente');\r\n        } catch (error) {\r\n            console.log(error);\r\n            alert('Ocurrio un error al guardar los datos');\r\n        }\r\n    }\r\n\r\n    const getMaterias = async () =>{\r\n        try {\r\n            let docs=[];\r\n            const materias = await getDocs(query(collection(db,'Materias')));\r\n            materias.forEach((doc) => {\r\n                docs.push(doc.data());\r\n            });\r\n            setMaterias(docs);\r\n        } catch (error) {\r\n            console.log('Error al obtener materias', error);\r\n        }\r\n    }\r\n    \r\n    const submit = (e) =>{\r\n        e.preventDefault();\r\n        console.log(srtrPregunta);\r\n        console.log(srtrOpcion1);\r\n        console.log(srtrOpcion2);\r\n        console.log(srtrOpcion3);\r\n        console.log(srtrOpcion4);\r\n        console.log(materia);\r\n        if(materia === 0 || materia === '0' || materia === ''){\r\n            alert(\"debe seleccionar una materia\");\r\n           return\r\n        } \r\n        if(srtrPregunta === '' || srtrPregunta === null || srtrPregunta === undefined){\r\n            alert('debe ingresar una pregunta');\r\n            return\r\n        }\r\n        if(srtrOpcion1 === '' || srtrOpcion1 === null || srtrOpcion1 === undefined){\r\n            alert('debe ingresar la opcion 1');\r\n            return\r\n        }\r\n        if(srtrOpcion2 === '' || srtrOpcion2 === null || srtrOpcion2 === undefined){\r\n            alert('debe ingresar la opcion 2');\r\n            return\r\n        }\r\n        if(srtrOpcion3 === '' || srtrOpcion3 === null || srtrOpcion3 === undefined){\r\n            alert('debe ingresar la opcion 3');\r\n            return\r\n        }\r\n        if(srtrOpcion4 === '' || srtrOpcion4 === null || srtrOpcion4 === undefined){\r\n            alert('debe ingresar la opcion correcta');\r\n            return\r\n        }\r\n\r\n        registrarPregunta();\r\n    }\r\n\r\n    useEffect(() => {\r\n        getMaterias();\r\n    }, [])\r\n    return(\r\n        <Fragment>\r\n            <center><h1>Agregar Pregunta</h1> </center>\r\n            {/*<MathView\r\n                value={texto}\r\n                ref={ref}\r\n            />*/}\r\n           {/* <h2>{pregunta} : {texto}\r\n            </h2>\r\n            {respuesta}\r\n            <h3>{formula}</h3>\r\n            <p> pppppppppp <MathView value={formula}/> ffffffffffff</p>\r\n\r\n            <button onClick={submit2}>Enviar</button>\r\n            <button onClick={procesarTexto}>procesar</button>\r\n            {mostrarTextoProcesado()}*/}\r\n            <form onSubmit={submit}>\r\n                <div className=\"form-floating\">\r\n                    <select className=\"form-select\" onChange={(e)=>setMateria(e.target.value)} id=\"floatingSelect\" aria-label=\"Floating label select example\">\r\n                        <option value=\"0\">seleccione una materia</option>\r\n                        {materias.map((item) => {\r\n                        return <option key={item.id} value={item.id}>{item.nombre}</option>\r\n                        })}\r\n                    </select>\r\n                    <label htmlFor=\"floatingSelect\">Seleccione una materia</label>\r\n                </div>\r\n                <br/>\r\n                <div className=\"form-floating\">\r\n                    <textarea value={srtrPregunta} onChange={actulizarPregunta} className=\"form-control\" placeholder=\"Leave a comment here\" id=\"floatingTextarea2\" style={{height: 100}}></textarea>\r\n                    {/*  <button className=\"col-sm-3\">agregar fromula matematica</button>*/}\r\n                    <label htmlFor=\"floatingTextarea2\">Pregunta</label>\r\n                </div>\r\n                <div className=\"mb-0\">\r\n                    <label htmlFor=\"opcion1\" className=\"form-label\">Opcion 1</label>\r\n                    <input type=\"text\" value={srtrOpcion1} onChange={(e)=>actulizaropcion(e, 'op1')} className=\"form-control\" id=\"opcion1\"/>\r\n                </div>\r\n                <div className=\"mb-0\">\r\n                    <label htmlFor=\"opcion2\" className=\"form-label\">Opcion 2</label>\r\n                    <input type=\"text\" value={srtrOpcion2} onChange={(e)=>actulizaropcion(e, 'op2')} className=\"form-control\" id=\"opcion2\"/>\r\n                </div>\r\n                <div className=\"mb-0\">\r\n                    <label htmlFor=\"opcion3\" className=\"form-label\">Opcion 3</label>\r\n                    <input type=\"text\" value={srtrOpcion3} onChange={(e)=>actulizaropcion(e, 'op3')} className=\"form-control\" id=\"opcion3\"/>\r\n                </div>\r\n                <div className=\"mb-0\">\r\n                    <label htmlFor=\"opciontrue\" className=\"form-label\">Opcion Correcta</label>\r\n                    <input type=\"text\" value={srtrOpcion4} onChange={(e)=>actulizaropcion(e, 'opC')} className=\"form-control\" id=\"opciontrue\"/>\r\n                </div>\r\n\r\n            </form>\r\n            <br/>\r\n            <button type=\"button\" className=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\" disabled={disableButton}>\r\n                Guardar pregunta\r\n            </button>\r\n\r\n\r\n            <div className=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\">\r\n                <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">Verifique sus datos</h5>\r\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <div class=\"alert alert-success\" role=\"alert\">\r\n                        Materia: {materia}\r\n                    </div>\r\n                    \r\n                    <div class=\"alert alert-primary\" role=\"alert\">\r\n                    Pregunta: {pregunta}\r\n                    </div>\r\n                    <div class=\"alert alert-success\" role=\"alert\">\r\n                    Opcion 1 : {srtrOpcion1}\r\n                    </div>\r\n                    <div class=\"alert alert-success\" role=\"alert\">\r\n                    Opcion 2 : {srtrOpcion2}\r\n                    </div>\r\n                    <div class=\"alert alert-success\" role=\"alert\">\r\n                    Opcion 3 : {srtrOpcion3}\r\n                    </div>\r\n\r\n                    <div class=\"alert alert-info\" role=\"alert\">\r\n                    Opcion Correcta : {srtrOpcion4}\r\n                    </div>\r\n\r\n\r\n                    \r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={submit} data-bs-dismiss=\"modal\">Guardar Pregunta</button>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    );\r\n}\r\n","import { Fragment, useEffect, useState } from \"react\";\r\nimport { doc, getDoc,updateDoc , setDoc,addDoc,collection } from \"firebase/firestore\";\r\nimport { query, where, getDocs } from \"firebase/firestore\";\r\nimport { db } from \"../config/firebase\";\r\n\r\nexport default function FormularioArea(){\r\n    const [area, setArea] = useState(\"\");\r\n    const [areas, setAreas] = useState([]);\r\n    const submit = async(e) => {\r\n        e.preventDefault();\r\n        console.log(area);\r\n        if(area!==\"\" || area!==null || area!==undefined){            \r\n            \r\n            const datosCarrera = {\r\n                id:2,\r\n                nombre:area,\r\n            }\r\n            await addDoc(collection(db, 'Areas'), datosCarrera);\r\n            alert(\"Se agrego correctamente\");\r\n\r\n        }\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        console.log(area);\r\n    },[area]);\r\n    \r\n    return(\r\n        <Fragment>\r\n            <h1>agregar Area</h1>\r\n            <form onSubmit={submit} >\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"nombre\" className=\"form-label\">Nombre de Area</label>\r\n                    <input type=\"text\" value={area} onChange={(e)=>setArea(e.target.value)} className=\"form-control\" id=\"nombre\"/>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n            </form>\r\n            {areas && areas.map((item) => {\r\n                return <p key={item.id}>{item.nombre}</p>\r\n            })\r\n            }\r\n        </Fragment>\r\n    );\r\n}\r\n","import { Fragment, useEffect, useState } from \"react\";\r\nimport { doc, getDoc,updateDoc , setDoc,addDoc,collection } from \"firebase/firestore\";\r\nimport { query, where, getDocs } from \"firebase/firestore\";\r\nimport { db } from \"../config/firebase\";\r\n\r\n\r\nexport default function FormularioCarrera(){\r\n    const [areas, setAreas] = useState([]);\r\n    const [areaSeleccionada, setAreaSeleccionada] = useState('');\r\n    const [materias, setMaterias] = useState([]);\r\n    const [materiasSeleccionadas, setMateriasSeleccionadas] = useState([]);\r\n    const [nombreCarrera, setNombreCarrera] = useState('');\r\n    const [disableButton, setDisableButton] = useState(false);    \r\n    \r\n    const getAreas = async () => {\r\n        try{\r\n            //get areas whith firebase firestore\r\n            let docs=[];\r\n            const data = await getDocs(query(collection(db,'Areas')));\r\n            data.forEach((doc) => {\r\n                docs.push({idArea:doc.id ,...doc.data()});\r\n            });\r\n            setAreas(docs);\r\n            console.log(docs);\r\n        } catch(error){\r\n            console.log('Error al obtener Areas:',error);\r\n        }\r\n    }\r\n    const getMaterias = async () => {\r\n        try{\r\n            //get materias whith firebase firestore\r\n            let docs=[];\r\n            const data = await getDocs(query(collection(db,'Materias')));\r\n            data.forEach((doc) => {\r\n                docs.push({idMateria:doc.id ,...doc.data()});\r\n            });\r\n            setMaterias(docs);\r\n        } catch(error){\r\n            console.log('Error al obtener Materias:',error);\r\n        }\r\n    }\r\n\r\n    const setMateriass = (index) => {\r\n        const materia = materias[index];\r\n        if(!materiasSeleccionadas.includes(materia)){\r\n            console.log(materiasSeleccionadas)\r\n            setMateriasSeleccionadas([...materiasSeleccionadas,materia]);\r\n        }else{\r\n            console.log(\"consola set materia\")\r\n        }\r\n    }\r\n\r\n    const quitarMateria = (index) => {\r\n        console.log(index,':index');\r\n        const materia = materiasSeleccionadas;\r\n        //quitar un elemento de una lista de elementos con un indice\r\n        let nueva = materia.filter((materia,i) => i !== index);\r\n        setMateriasSeleccionadas(nueva);\r\n    }\r\n\r\n    const submit =async (e) => {\r\n        e.preventDefault();\r\n        if(areaSeleccionada === '' || areaSeleccionada === undefined || areaSeleccionada === 0 || areaSeleccionada === '0'){\r\n            alert('Seleccione un area');\r\n            return;\r\n        }\r\n        if(nombreCarrera === '' || nombreCarrera === undefined){\r\n            alert('Ingrese el nombre de la carrera correctamente');\r\n            return;\r\n        }\r\n        if(materiasSeleccionadas.length === 0){\r\n            alert('Seleccione y verifica las materias de la carrera');\r\n            return;\r\n        }\r\n\r\n        setDisableButton(true);\r\n        //get carreras whith firebase firestore\r\n        const data = await getDocs(query(collection(db,'Carreras')));\r\n        \r\n        const datosCarrera = {\r\n            id:data.size+1,\r\n            area:areaSeleccionada,\r\n            nombre:nombreCarrera,\r\n            materias: materiasSeleccionadas,\r\n        }\r\n        const adD = await addDoc(collection(db, 'Carreras'), datosCarrera);\r\n        console.log(adD.id);\r\n        //update Areas\r\n        const area = await getDoc(doc(db, \"Areas\", areaSeleccionada));\r\n        if(area.exists()){\r\n            console.log(\"area seleccionada\",area.data().carreras);\r\n            const Ca=[...area.data().carreras, {idCarrera:adD.id, nombre:nombreCarrera}];\r\n\r\n            await updateDoc(doc(db, \"Areas\",areaSeleccionada), {carreras:Ca});\r\n            console.log('data updated');\r\n        }else{\r\n            alert(\"Error al de conexion vuelve a intentarlo\");\r\n        }\r\n        console.log('registro exitoso');\r\n        setAreaSeleccionada(\"\")\r\n        setMateriasSeleccionadas([])\r\n        setNombreCarrera(\"\")\r\n        setDisableButton(false);\r\n    \r\n    }\r\n\r\n    useEffect(()=>{\r\n       getAreas();\r\n       getMaterias();\r\n    },[]);\r\n    \r\n    return(\r\n        <Fragment>\r\n            <h1>agregar nueva Carrera</h1>\r\n            <form onSubmit={submit} >\r\n                <select className=\"form-select\" onChange={(e)=>setAreaSeleccionada(e.target.value)}>\r\n                    <option value=\"0\">seleccione un Area</option>\r\n                    {areas.map((item) => {\r\n                        return <option key={item.idArea} value={item.idArea}>{item.nombre}</option>\r\n                    })}\r\n                </select>\r\n                {areaSeleccionada}\r\n\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"nombre\" className=\"form-label\">Nombre Carrera</label>\r\n                    <input type=\"text\" value={nombreCarrera} onChange={(e)=>setNombreCarrera(e.target.value)} className=\"form-control\" id=\"nombre\"/>\r\n                    {nombreCarrera}\r\n                </div>\r\n\r\n                <select className=\"form-select\" size=\"4\" aria-label=\"size 3 select example\" onChange={(e)=>setMateriass(e.target.value)}>\r\n                    {materias.map((item,index) => {\r\n                        return <option key={item.id} value={index}>{item.nombre}</option>\r\n                    })}\r\n                </select>\r\n                <button type=\"submit\" className=\"btn btn-primary\" disabled={disableButton}>Registrar Materia</button>\r\n            </form>\r\n\r\n            <h3>materias Seleccionadas:</h3>\r\n            {materiasSeleccionadas.map((item,index) => {\r\n                return <p key={item.id}>{item.nombre} <button onClick={()=>quitarMateria(index)}>X</button></p>\r\n\r\n            })}\r\n        </Fragment>\r\n    );\r\n}\r\n","import { useState } from 'react';\r\nimport FormularioMaterias from './components/FormularioMaterias';\r\nimport FormularioPregunta from './components/FormularioPregunta';\r\nimport FormularioArea from './components/FormularioArea';\r\nimport FormularioCarrera from './components/FormularioCarrera';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n\r\n  const [buttons, setButtons] = useState({\r\n    materias: false,\r\n    pregunta: true,\r\n    area: false,\r\n    carrera: false,\r\n  });\r\n\r\n  const changeView = (view) => {\r\n    setButtons({\r\n      materias: false,\r\n      pregunta: false,\r\n      area: false,\r\n      carrera: false,\r\n    });\r\n    setButtons({\r\n      [view]: true,\r\n    });\r\n  }\r\n  \r\n  return (\r\n    <div className='container'>\r\n      <center>\r\n        <h1>LLenado de datos</h1>\r\n        <button className={buttons.pregunta?'btn btn-primary': 'btn btn-secondary'} onClick={() => changeView('pregunta')}>Preguntas</button>\r\n        <button className={buttons.materias?'btn btn-primary': 'btn btn-secondary'} onClick={() => changeView('materias')}>\r\n            Materias\r\n        </button>\r\n        <button className={buttons.area?'btn btn-primary': 'btn btn-secondary'} onClick={() => changeView('area')}>\r\n            Areas\r\n        </button>\r\n        <button className={buttons.carrera?'btn btn-primary': 'btn btn-secondary'} onClick={() => changeView('carrera')}>\r\n            Carreras\r\n        </button>\r\n      </center>\r\n        {buttons.materias?<FormularioMaterias/>:null}\r\n        {buttons.pregunta?<FormularioPregunta/>:null}\r\n        {buttons.area?<FormularioArea/>:null}\r\n        {buttons.carrera?<FormularioCarrera/>:null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}